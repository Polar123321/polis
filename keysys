local Library = loadstring(game:HttpGetAsync("https://github.com/ActualMasterOogway/Fluent-Renewed/releases/latest/download/Fluent.luau"))()
local SaveManager = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/ActualMasterOogway/Fluent-Renewed/master/Addons/SaveManager.luau"))()
local InterfaceManager = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/ActualMasterOogway/Fluent-Renewed/master/Addons/InterfaceManager.luau"))()
 
local Window2 = Library:CreateWindow{
    Title = `Fluent {Library.Version}`,
    SubTitle = "by Actual Master Oogway",
    TabWidth = 160,
    Size = UDim2.fromOffset(830, 525),
    Resize = true, -- Resize this ^ Size according to a 1920x1080 screen, good for mobile users but may look weird on some devices
    MinSize = Vector2.new(470, 380),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.RightControl -- Used when theres no MinimizeKeybind
}

_G.Key = "7#mQ9@zL!2pXv$5&dK*8wRnY4^cTj6%hGf1aSb3eIoP0uAlOqVxZyDkHrCtJgMlNwB"
_G.KeyInput = "string"

-- Fluent Renewed provides ALL 1544 Lucide 0.469.0 https://lucide.dev/icons/ Icons and ALL 9072 Phosphor 2.1.0 https://phosphoricons.com/ Icons for the tabs, icons are optional
local Tabs = {
    Main = Window2:CreateTab{
        Title = "Main",
        Icon = "phosphor-users-bold"
    },
    Settings = Window2:CreateTab{
        Title = "Settings",
        Icon = "settings"
    }
}

function MakeScriptHub()
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local camera = workspace.CurrentCamera


local localPlayer = Players.LocalPlayer

local Library = loadstring(game:HttpGetAsync("https://github.com/ActualMasterOogway/Fluent-Renewed/releases/latest/download/Fluent.luau"))()
local SaveManager = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/ActualMasterOogway/Fluent-Renewed/master/Addons/SaveManager.luau"))()
local InterfaceManager = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/ActualMasterOogway/Fluent-Renewed/master/Addons/InterfaceManager.luau"))()
 
local Window = Library:CreateWindow{
    Title = "Polis Hub 1.0 Release",
    SubTitle = "by Polar",
    TabWidth = 160,
    Size = UDim2.fromOffset(830, 525),
    Resize = true, -- Resize this ^ Size according to a 1920x1080 screen, good for mobile users but may look weird on some devices
    MinSize = Vector2.new(470, 380),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.RightControl -- Used when theres no MinimizeKeybind
}

-- Fluent Renewed provides ALL 1544 Lucide 0.469.0 https://lucide.dev/icons/ Icons and ALL 9072 Phosphor 2.1.0 https://phosphoricons.com/ Icons for the tabs, icons are optional
local Tabs = {
    Main = Window:CreateTab{
        Title = "Main",
        Icon = "phosphor-users-bold"
    },
    Settings = Window:CreateTab{
        Title = "Settings",
        Icon = "settings"
    },

    Teleports = Window:CreateTab{
        Title = "Teleports",
        Icon = "phosphor-arrow-square-out"
    },

    AutoFarm = Window:CreateTab{
        Title = "Auto Farm",
        Icon = "phosphor-atom"
    },

    ESP = Window:CreateTab{
        Title = "ESP",
        Icon = "phosphor-eye"
    },

    Misc = Window:CreateTab{
        Title = "Misc",
        Icon = "phosphor-device-mobile-camera"
    }


}

-- 📍 Tabela de Localizações para Teleporte
local teleport_table = {
    shrine = Vector3.new(-12185.5254, -36.4626541, -18545.5059, 1, 0, 0, 0, 1, 0, 0, 0, 1),
    coco_island =  Vector3.new(-4155.60303, -18.8006973, -15596.2891, 1, 0, 0, 0, 1, 0, 0, 0, 1),
    fishman_cave = Vector3.new(5683.76904, 9.2382412, -16452.0703, -1, 0, 0, 0, 1, 0, 0, 0, -1),
    fishman_island = Vector3.new(8117.80713, -2239.75684, -17723.207, -0.866025329, 0, 0.500000179, 0, 1, 0, -0.500000179, 0, -0.866025329),
    sandora = Vector3.new(-1203.58545, 5.57169533, 1190.2312, 1, 0, 0, 0, 1, 0, 0, 0, 1),
    gravito_fort = Vector3.new(2639.01025, 57.93396, -15768.7324, 0, 0, 1, 0, 1, -0, -1, 0, 0),
    island_of_zou = Vector3.new(-4847.43701, -71.6658859, -2553.83203, 0.605664313, 0, 0.795720279, 0, 1, 0, -0.795720279, 0, 0.605664313),
    kori_island = Vector3.new(-6585.4375, 44.4979401, 2009.61133, 1, 0, 0, 0, 1, 0, 0, 0, 1),
    land_of_the_sky = Vector3.new(8342.18262, 2081.66455, -11593.1074, 0.618691921, -2.15628884e-08, 0.785633743, 4.70306993e-08, 1, -9.59050439e-09, -0.785633743, 4.28824691e-08, 0.618691921),
    logue_town = Vector3.new(-11559.3018, -35.5570602, -7327.87793, 0, 0, -1, 0, 1, 0, 1, 0, 0),
    marine_base_g1 = Vector3.new(-10269.2207, 269.073425, -14690.7402, -1, 0, 0, 0, 1, 0, 0, 0, -1),
    marine_fort_f1 = Vector3.new(2965.71582, 10.0771561, -991.493835, -1, -5.44952972e-13, 0, 5.44952972e-13, 1, 0, 0, 0, -1),
    mysterious_cliff = Vector3.new(2199.21191, 160.91394, -8642.25391, 0, 0, 1, 0, 1, -0, -1, 0, 0),
    orange_town = Vector3.new(-7180.11377, -109.399475, -5346.91455, 1, 0, 0, 0, 1, 0, 0, 0, 1),
    restaurant_baratie = Vector3.new(-3912.59521, 85.2707138, -5609.7666, 0.99984771, 0.0174524058, 0, -0.0174524058, 0.99984771, 0, 0, 0, 1),
    reverse_mountain = Vector3.new(-15472.8193, 805.818787, -9058.86621, 0, 0, 1, 0, 1, -0, -1, 0, 0),
    roca_island = Vector3.new(5529.6626, -33.4869919, -5007.43896, 1, 0, 0, 0, 1, 0, 0, 0, 1),
    shark_park = Vector3.new(485.157501, 0.61517334, -13332.127, 0, 0, 1, 0, 1, -0, -1, 0, 0),
    shells_town = Vector3.new(-522.008789, 13.9875097, -4872.61914, -1, 0, 0, 0, 1, 0, 0, 0, -1),
    sphinx_island = Vector3.new(-6465.90088, 18.3654633, -10082.8936, -0.258818954, 0, 0.965925574, 0, 1, 0, -0.965925574, 0, -0.258818954),
    town_of_beggings = Vector3.new(986.496399, -9.04358292, 1186.62134, 0, 0, 1, 0, 1, -0, -1, 0, 0)
}

print(5639.86865, -92.762001, -16611.4688, -1, 0, 0, 0, 1, 0, 0, 0, -1)

local function bypass_teleport(destination)
    local character = localPlayer.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        local humanoidRootPart = character.HumanoidRootPart

        -- Configuração do Tween
        local tweenInfo = TweenInfo.new(
            (destination - humanoidRootPart.Position).Magnitude / 70, -- Duração baseada na distância
            Enum.EasingStyle.Linear, -- Easing suave
            Enum.EasingDirection.Out, -- Movimento suave no final
            0, -- Nenhuma repetição
            false -- Não reverte
        )

        -- Cria o Tween
        local tween = TweenService:Create(humanoidRootPart, tweenInfo, { CFrame = CFrame.new(destination) })
        tween:Play()

        -- Espera o Tween terminar
        tween.Completed:Wait()

        -- Notificação de sucesso
        Library:Notify({ Title = "Teleportado!", Content = "Destino alcançado!", Duration = 4 })
        print("nigger")
    end
end



    -- Variáveis para o fly
    local flyEnabled = false
    local flySpeed = 50 -- Velocidade padrão do fly
    local flyConnection
    local bodyVelocity
    local bodyGyro

    -- Função para ativar/desativar o fly
    local function toggleFly()
        if flyEnabled then
            -- Ativa o fly
            local character = localPlayer.Character
            if character and character:FindFirstChild("HumanoidRootPart") then
                local rootPart = character.HumanoidRootPart

                -- Cria o BodyVelocity e BodyGyro
                bodyVelocity = Instance.new("BodyVelocity")
                bodyVelocity.Velocity = Vector3.new(0, 0, 0)
                bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                bodyVelocity.P = 1000
                bodyVelocity.Parent = rootPart

                bodyGyro = Instance.new("BodyGyro")
                bodyGyro.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
                bodyGyro.P = 1000
                bodyGyro.D = 100
                bodyGyro.CFrame = rootPart.CFrame
                bodyGyro.Parent = rootPart

                flyConnection = RunService.Heartbeat:Connect(function()
                    if flyEnabled then
                        -- Movimentação do fly
                        local direction = Vector3.new(0, 0, 0)
                        local camera = workspace.CurrentCamera

                        if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                            direction = direction + camera.CFrame.LookVector
                        end
                        if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                            direction = direction - camera.CFrame.LookVector
                        end
                        if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                            direction = direction - camera.CFrame.RightVector
                        end
                        if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                            direction = direction + camera.CFrame.RightVector
                        end
                        if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
                            direction = direction + Vector3.new(0, 1, 0)
                        end
                        if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
                            direction = direction + Vector3.new(0, -1, 0)
                        end

                        -- Normaliza a direção e aplica a velocidade
                        if direction.Magnitude > 0 then
                            direction = direction.Unit * flySpeed
                            bodyVelocity.Velocity = direction
                        else
                            bodyVelocity.Velocity = Vector3.new(0, 0, 0)
                        end

                        -- Mantém a rotação estável
                        bodyGyro.CFrame = rootPart.CFrame
                    else
                        -- Desativa o fly
                        if flyConnection then
                            flyConnection:Disconnect()
                        end
                        if bodyVelocity then
                            bodyVelocity:Destroy()
                        end
                        if bodyGyro then
                            bodyGyro:Destroy()
                        end
                    end
                end)
            end
        else
            -- Desativa o fly
            if flyConnection then
                flyConnection:Disconnect()
            end
            if bodyVelocity then
                bodyVelocity:Destroy()
            end
            if bodyGyro then
                bodyGyro:Destroy()
            end
        end
    end

    -- 📌 Adicionando Botões de Teleporte
for name, position in pairs(teleport_table) do
    Tabs.Teleports:CreateButton({
        Title = "🌍 - " .. name:gsub("_", " "):gsub("^%l", string.upper),
        Description = "Tween to " .. name:gsub("_", " "),
        Callback = function() bypass_teleport(position) end
    })
end

    local Noclip = nil
    local Clip = nil

    -- Adiciona um toggle para ativar/desativar o fly
    local FlyToggle = Tabs.Main:CreateToggle("FlyToggle", {
        Title = "🦅 - Fly",
        Description = "Ativa/Desativa o fly",
        Default = false
    })

    FlyToggle:OnChanged(function(value)
        flyEnabled = value
        toggleFly()
    end)


    -- Adiciona um slider para ajustar a velocidade do fly
    local FlySpeedSlider = Tabs.Main:CreateSlider("FlySpeedSlider", {
        Title = "Fly Speed",
        Description = "Ajusta a velocidade do fly",
        Default = 50,
        Min = 10,
        Max = 200,
        Rounding = 1,
        Callback = function(value)
            flySpeed = value
        end
    })

    Tabs.Main:CreateParagraph("Aligned Paragraph", {
        Title = "-----------------------",
        Content = "-----------------------",
        TitleAlignment = "Middle",
        ContentAlignment = Enum.TextXAlignment.Center
    })

        -- Adiciona Infinite Yield
        Tabs.Main:CreateButton({
            Title = "Infinite Yield",
            Description = "Script",
            Callback = function()
                loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
            end
        })
    
        -- Adiciona slider para a distância da câmera
        Tabs.Main:CreateSlider("CameraDistance", {
            Title = "Camera Value Distance",
            Description = "Set your Camera Value Distance",
            Default = 300,
            Min = 20,
            Max = 4000,
            Rounding = 1,
            Callback = function(Value)
                localPlayer.CameraMaxZoomDistance = Value
            end
        })
    
        -- Adiciona slider para WalkSpeed
        local currentLoop = nil
        local currentValue = 16
    
        Tabs.Main:CreateSlider("WalkSpeedBypass", {
            Title = "WalkSpeed Slider",
            Description = "",
            Default = 16,
            Min = 16,
            Max = 600,
            Rounding = 1,
            Callback = function(Value)
                if currentLoop then
                    currentLoop:Disconnect()
                    currentLoop = nil
                end
    
                currentValue = tonumber(Value) or 16
    
                if currentValue > 0 then
                    currentLoop = RunService.Heartbeat:Connect(function()
                        local character = localPlayer.Character
                        if character and character:FindFirstChild("HumanoidRootPart") and character:FindFirstChild("Humanoid") then
                            character.Humanoid.WalkSpeed = 16
                            local direction = character.Humanoid.MoveDirection
                            if direction.Magnitude > 0 then
                                local speedMultiplier = 2
                                local additionalMovement = direction * (currentValue / 100) * speedMultiplier
                                character.HumanoidRootPart.CFrame = character.HumanoidRootPart.CFrame + additionalMovement
                            end
                        end
                    end)
                end
            end
        })


        

-- Hand the library over to our managers
SaveManager:SetLibrary(Library)
InterfaceManager:SetLibrary(Library)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- You can add indexes of elements the save manager should ignore
SaveManager:SetIgnoreIndexes{}

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)


Window:SelectTab(1)

Library:Notify{
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 8
}

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()

Destroy(Window2)
end


function CorrectKey()
    
Library:Notify{
    Title = "Key System",
    Content = "Correct Key! the script will be loaded.",
    Duration = 8
}
end

function incorrectkey()
    
Library:Notify{
    Title = "Key System",
    Content = "Incorrect Key",
    Duration = 8
}
end

local Options = Library.Options

local Input = Tabs.Main:CreateInput("Input", {
    Title = "Key System",
    Default = "",
    Placeholder = "Placeholder",
    Numeric = false, -- Only allows numbers
    Finished = false, -- Only calls callback when you press enter
    Callback = function(Value)
        _G.KeyInput = Value
    end
})

Input:OnChanged(function()
    
end)

local Button = Tabs.Main:CreateButton{
    Title = "Check Key",
    Description = "Check Key",
    Callback = function()
        if _G.KeyInput == _G.Key then
            MakeScriptHub()
            CorrectKey()
        else
            incorrectkey()
        end
    end
}

-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- InterfaceManager (Allows you to have a interface managment system)

-- Hand the library over to our managers
SaveManager:SetLibrary(Library)
InterfaceManager:SetLibrary(Library)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- You can add indexes of elements the save manager should ignore
SaveManager:SetIgnoreIndexes{}

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)


Window2:SelectTab(1)

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()
